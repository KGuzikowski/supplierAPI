# Generated by Django 3.0.6 on 2020-11-15 17:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import supplierapi.apps.company.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^([a-zA-ZàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞąćęłńóśźżĄĆĘŁŃÓŚŹŻàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ.]| )+$')])),
                ('post_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d+$'), django.core.validators.MinLengthValidator(5)])),
                ('street', models.CharField(max_length=40)),
                ('house_number', models.CharField(max_length=10)),
                ('local_number', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator('^\\d+$')])),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'active'), (1, 'inactive')], default=0)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('short_name', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=supplierapi.apps.company.models.company_directory_path)),
                ('number_VAT', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-ZàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞąćęłńóśźżĄĆĘŁŃÓŚŹŻàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ\\d+*]+$'), django.core.validators.MinLengthValidator(10)])),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^([a-zA-ZàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞąćęłńóśźżĄĆĘŁŃÓŚŹŻàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ.]| )+$')])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^\\d+$'), django.core.validators.MinLengthValidator(9)])),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='company.Company')),
                ('dialing_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='general.DialingCode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='company.Company')),
                ('roles', models.ManyToManyField(to='company.Role')),
            ],
        ),
    ]
